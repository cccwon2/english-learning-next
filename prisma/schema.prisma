generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

model User {
  id                 String    @id @db.Uuid
  email              String?   @unique @db.VarChar(255)
  profile            Profile?
  
  @@schema("auth")
  @@map("users")
}

model Profile {
  id         String   @id @db.Uuid
  user_id    String   @unique @db.Uuid
  name       String?
  grade      Int?     @db.SmallInt
  class      Int?     @db.SmallInt
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @updatedAt @db.Timestamptz(6)
  user       User     @relation(fields: [user_id], references: [id])
  conversations Conversation[]

  @@schema("public")
  @@map("profiles")
}

model Conversation {
  id              Int       @id @default(autoincrement())
  message         String
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  updated_at      DateTime  @updatedAt @db.Timestamptz(6)
  is_user_message Boolean
  profile_id      String    @db.Uuid
  translation     ConversationTranslation?
  profile         Profile   @relation(fields: [profile_id], references: [id])

  @@index([profile_id])
  @@schema("public")
  @@map("conversations")
}

model ConversationTranslation {
  id                  Int          @id @default(autoincrement())
  response            String?
  language            String?
  conversation_id     Int          @unique
  translated_message  String?
  translated_response String?
  created_at          DateTime     @default(now()) @db.Timestamptz(6)
  updated_at          DateTime     @updatedAt @db.Timestamptz(6)
  conversation        Conversation @relation(fields: [conversation_id], references: [id])

  @@index([conversation_id])
  @@schema("public")
  @@map("conversation_translations")
}
